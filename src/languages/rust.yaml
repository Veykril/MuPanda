langKey: rust
tokenColors:
  # &, ::, =>, etc.
  - scope: keyword.operator.misc, keyword.operator.sigil
    settings:
      foreground: _font-primary
  - scope: storage.modifier.visibility, storage.modifier.mut, storage.modifier.dyn, storage.modifier.const
    settings:
      foreground: _keyword
  # general attributes/macros
  - scope: entity.name.function.attribute, entity.name.function.macro
    settings:
      foreground: _function-special
  - scope: comment.block.documentation, comment.line.documentation
    settings:
      foreground: _comment-doc
      fontStyle: italic
  # lifetime
  - scope: storage.modifier.lifetime
    settings:
      foreground: _string
      fontStyle: italic
  # self/box
  - scope: variable.language, storage.modifier.box
    settings:
      foreground: _keyword-special
  - scope: keyword.other.unsafe
    settings:
      foreground: _red
      fontStyle: bold
  - scope: support.type.primitive
    settings:
      foreground: _type-special
  # also colors the angle brackets, so just rely on semantic highlighting instead for this
  #- scope: meta.type_params
  #  settings:
  #    foreground: _type
   #   fontStyle: bold
semanticTokenColors:
  selfType: _type-special
  selfKeyword: _keyword-special
  typeAlias: _type
  builtinType: _type-special
  enumMember: _function
  lifetime:
    foreground: _string
    fontStyle: italic
  # modifiers
  '*.unsafe': 
    foreground: _red
    fontStyle: bold
  '*.mutable':
    fontStyle: underline
  variable.static.mutable:
    fontStyle: bold underline
  function.attribute: _function-special
colors:
  'rust_analyzer.inlayHint': _lighter-gray-fade