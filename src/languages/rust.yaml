langKey: rust
tokenColors:
  # &, ::, =>, etc.
  - scope: keyword.operator.misc, keyword.operator.sigil
    settings:
      foreground: _font-primary
  - scope: storage.modifier.visibility, storage.modifier.mut, storage.modifier.dyn, storage.modifier.const
    settings:
      foreground: _keyword
  # general attributes/macros
  - scope: entity.name.function.attribute, entity.name.function.macro
    settings:
      foreground: _function-special
  - scope: comment.block.documentation, comment.line.documentation
    settings:
      foreground: _comment-doc
      fontStyle: italic
  # lifetime
  - scope: storage.modifier.lifetime
    settings:
      foreground: _string
      fontStyle: italic
  # self/box
  - scope: variable.language, storage.modifier.box
    settings:
      foreground: _keyword-special
  - scope: keyword.other.unsafe
    settings:
      foreground: _red
      fontStyle: bold
  - scope: support.type.primitive
    settings:
      foreground: _type-special
  # char literals
  - scope: string.quoted.single
    settings:
      foreground: _string-special
  # also colors the angle brackets, so just rely on semantic highlighting instead for this
  #- scope: meta.type_params
  #  settings:
  #    foreground: _type
   #   fontStyle: bold
semanticTokenColors:
  selfType: _type-special
  selfKeyword: _keyword-special
  typeAlias: _type
  builtinType: _type-special
  enumMember: _type
  lifetime:
    foreground: _string
    fontStyle: italic
  label:
    foreground: _string
    fontStyle: italic
  constParameter:
    foreground: _font-primary
    fontStyle: bold
  # modifiers
  '*.unsafe':
    foreground: _red
    fontStyle: bold
  '*.mutable':
    fontStyle: _style-mutable
  generic.attribute: _font-primary
  variable.callable: _function
  variable.callable.mutable:
    foreground: _function
    fontStyle: _style-mutable
  # needs to be specified seperately due to the use of variable.static
  variable.static.mutable:
    fontStyle: _style-mutable _style-global
  # statics are only unsafe when they are mutable
  variable.static.mutable.unsafe:
    foreground: _red
    fontStyle: _style-mutable _style-global
  generic.injected:
    foreground: _font-primary
  punctuation.injected:
    foreground: _font-primary
  # punctuation
  bracket:
    foreground: _font-primary
  brace:
    foreground: _font-primary
  parenthesis:
    foreground: _font-primary
  angle:
    foreground: _font-primary
  comma:
    foreground: _font-primary
  dot:
    foreground: _font-primary
  colon:
    foreground: _font-primary
  semicolon:
    foreground: _font-primary
  punctuation:
    foreground: _font-primary
